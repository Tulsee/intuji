// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  username String @unique
  password String

  email String? @unique
  fullName String?

  role String @default("user")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts Post[]
  comments Comment[]

  @@map("users")
}

model Image {
  id Int @id @default(autoincrement())

  url String

  post Post @relation(fields:[postId], references:[id])
  postId Int @unique

  createdAt DateTime @default(now())

  @@map("images")
}

model Post {
  id Int @id @default(autoincrement())

  title String
  content String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

 authorId Int
 author   User @relation(fields: [authorId], references: [id])

 comments Comment[]
 image Image?

 @@map("posts")
}

model Comment {
  id Int @id @default(autoincrement())

  content String

  postId Int
  post Post @relation(fields:[postId], references:[id])

  userId Int
  user User @relation(fields:[userId], references:[id])

  createdAt DateTime @default(now())


  @@map("comments")
}